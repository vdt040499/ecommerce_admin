[{"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\App.js":"1","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\helpers\\axios.js":"2","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Home\\index.jsx":"3","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Signup\\index.jsx":"4","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\user.actions.js":"5","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\product.action.js":"6","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\urlConfig.js":"7","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\user.reducer.js":"8","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\Layout\\index.jsx":"9","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\Header\\index.jsx":"10","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Category\\index.jsx":"11","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\UI\\Input\\index.jsx":"12","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Orders\\index.jsx":"13","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\reportWebVitals.js":"14","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\category.action.js":"15","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\auth.reducers.js":"16","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\category.reducer.js":"17"},{"size":1273,"mtime":1607862081915,"results":"18","hashOfConfig":"19"},{"size":319,"mtime":1607345171547,"results":"20","hashOfConfig":"19"},{"size":780,"mtime":1606481668042,"results":"21","hashOfConfig":"19"},{"size":2645,"mtime":1606477165244,"results":"22","hashOfConfig":"19"},{"size":707,"mtime":1606477957639,"results":"23","hashOfConfig":"19"},{"size":210,"mtime":1606551302760,"results":"24","hashOfConfig":"19"},{"size":157,"mtime":1607912007390,"results":"25","hashOfConfig":"19"},{"size":795,"mtime":1606477364443,"results":"26","hashOfConfig":"19"},{"size":960,"mtime":1607345873291,"results":"27","hashOfConfig":"19"},{"size":2264,"mtime":1607345619268,"results":"28","hashOfConfig":"19"},{"size":10881,"mtime":1608012272003,"results":"29","hashOfConfig":"19"},{"size":491,"mtime":1607942335680,"results":"30","hashOfConfig":"19"},{"size":217,"mtime":1606480950957,"results":"31","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"19"},{"size":1594,"mtime":1608012181243,"results":"33","hashOfConfig":"19"},{"size":1419,"mtime":1606478998294,"results":"34","hashOfConfig":"19"},{"size":2329,"mtime":1608011969297,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"b2ahz9",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\App.js",["77"],"import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { isUserLoggedIn } from \"./actions\";\nimport { getInitialData } from \"./actions/initialData.action\";\nimport \"./App.css\";\nimport PrivateRoute from \"./components/HOC/PrivateRoute\";\nimport Category from \"./containers/Category\";\nimport Home from \"./containers/Home\";\nimport Orders from \"./containers/Orders\";\nimport Products from \"./containers/Products\";\nimport Signin from \"./containers/Signin\";\nimport Signup from \"./containers/Signup\";\n\nfunction App() {\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLoggedIn());\n    }\n\n    dispatch(getInitialData());\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <PrivateRoute path=\"/\" exact component={Home} /> \n        <PrivateRoute path=\"/category\" component={Category} /> \n        <PrivateRoute path=\"/products\" component={Products} />\n        <PrivateRoute path=\"/orders\" component={Orders} />\n\n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/signup\" component={Signup} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n",["78","79"],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\helpers\\axios.js",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Home\\index.jsx",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Signup\\index.jsx",["80","81"],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\user.actions.js",[],["82","83"],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\product.action.js",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\urlConfig.js",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\user.reducer.js",["84"],"import { userConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n  error: \"\",\r\n  message: \"\",\r\n  loading: false,\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  console.log(action);\r\n\r\n  switch (action.type) {\r\n    case userConstants.USER_REGISTER_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case userConstants.USER_REGISTER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload.message,\r\n      };\r\n      break;\r\n    case userConstants.USER_REGISTER_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n    default:\r\n      state = {\r\n        ...state,\r\n      };\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\Layout\\index.jsx",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\Header\\index.jsx",["85"],"import React from \"react\";\r\nimport { Nav, Navbar, NavDropdown, Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { signout } from \"../../actions\";\r\n\r\nfunction Header() {\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const logout = () => {\r\n    dispatch(signout());\r\n  }\r\n\r\n  const renderLoggedInLinks = () => {\r\n    return (\r\n      <Nav>\r\n        <li className=\"nav-item\">\r\n          <span to=\"/signout\" className=\"nav-link\" onClick={logout}>\r\n            Signout\r\n          </span>\r\n        </li>\r\n      </Nav>\r\n    );\r\n  };\r\n\r\n  const renderNonLoggedInLinks = () => {\r\n    return (\r\n      <Nav>\r\n        <li className=\"nav-item\">\r\n          <NavLink to=\"/signin\" className=\"nav-link\">\r\n            Signin\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink to=\"/signup\" className=\"nav-link\">\r\n            Signup\r\n          </NavLink>\r\n        </li>\r\n      </Nav>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Navbar\r\n      collapseOnSelect\r\n      fixed=\"top\"\r\n      expand=\"lg\"\r\n      bg=\"dark\"\r\n      variant=\"dark\"\r\n      style={{ zIndex: 1 }}\r\n    >\r\n      <Container fluid>\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          Admin Dashboard\r\n        </Link>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">\r\n                Another action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">\r\n                Separated link\r\n              </NavDropdown.Item>\r\n            </NavDropdown> */}\r\n          </Nav>\r\n          \r\n            {auth.authenticate ? renderLoggedInLinks() : renderNonLoggedInLinks()}\r\n\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Category\\index.jsx",["86","87","88","89","90","91","92"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addCategory, getAllCategory, updateCategories } from \"../../actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport {\r\n  IoIosCheckboxOutline,\r\n  IoIosCheckbox,\r\n  IoIosArrowForward,\r\n  IoIosArrowDown,\r\n} from \"react-icons/io\";\r\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\r\n\r\nfunction Category() {\r\n  const dispatch = useDispatch();\r\n  const category = useSelector((state) => state.category);\r\n  const [show, setShow] = useState(false);\r\n  const [checked, setChecked] = useState([]);\r\n  const [expanded, setExpanded] = useState([]);\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [parentCategoryId, setParentCategoryId] = useState(\"\");\r\n  const [categoryImage, setCategoryImage] = useState(\"\");\r\n  const [checkedArray, setCheckedArray] = useState([]);\r\n  const [expandedArray, setExpandedArray] = useState([]);\r\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    const form = new FormData();\r\n\r\n    form.append(\"name\", categoryName);\r\n    form.append(\"parentId\", parentCategoryId);\r\n    form.append(\"categoryImage\", categoryImage);\r\n    console.log(form);\r\n    dispatch(addCategory(form));\r\n    setCategoryName(\"\");\r\n    setParentCategoryId(\"\");\r\n\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n\r\n  const renderCategories = (categories) => {\r\n    let myCategories = [];\r\n    for (let category of categories) {\r\n      myCategories.push({\r\n        label: category.name,\r\n        value: category._id,\r\n        children:\r\n          category.children.length > 0 && renderCategories(category.children),\r\n      });\r\n    }\r\n    return myCategories;\r\n  };\r\n\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({\r\n        value: category._id,\r\n        name: category.name,\r\n        parentId: category.parentId,\r\n      });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n\r\n    return options;\r\n  };\r\n\r\n  const handleCategoryImage = (e) => {\r\n    setCategoryImage(e.target.files[0]);\r\n  };\r\n\r\n  const updateCategory = () => {\r\n    setUpdateCategoryModal(true);\r\n    const categories = createCategoryList(category.categories);\r\n    const checkedArray = [];\r\n    const expandedArray = [];\r\n    checked.length > 0 &&\r\n      checked.forEach((categoryId, index) => {\r\n        const category = categories.find(\r\n          (category, index) => categoryId == category.value\r\n        );\r\n        category && checkedArray.push(category);\r\n      });\r\n\r\n    expanded.length > 0 &&\r\n      expanded.forEach((categoryId, index) => {\r\n        const category = categories.find(\r\n          (category, index) => categoryId == category.value\r\n        );\r\n        category && expandedArray.push(category);\r\n      });\r\n\r\n    setCheckedArray(checkedArray);\r\n    setExpandedArray(expandedArray);\r\n    console.log({ checked, expanded, categories, checkedArray, expandedArray });\r\n  };\r\n\r\n  const handleCategoryInput = (key, value, index, type) => {\r\n    if (type == \"checked\") {\r\n      const updatedCheckedArray = checkedArray.map((item, _index) =>\r\n        index == _index ? { ...item, [key]: value } : item\r\n      );\r\n      setCheckedArray(updatedCheckedArray);\r\n    } else if (type == \"expanded\") {\r\n      const updatedExpandedArray = expandedArray.map((item, _index) =>\r\n        index == _index ? { ...item, [key]: value } : item\r\n      );\r\n      setExpandedArray(updatedExpandedArray);\r\n    }\r\n  };\r\n\r\n  const updateCategoriesForm = () => {\r\n    const form = new FormData();\r\n\r\n    expandedArray.forEach((item, index) => {\r\n      form.append('_id', item.value);\r\n      form.append('name', item.name);\r\n      form.append('parentId', item.parentId ? item.parentId : \"\");\r\n      form.append('type', item.type);\r\n\r\n    });\r\n\r\n    checkedArray.forEach((item, index) => {\r\n      form.append('_id', item.value);\r\n      form.append('name', item.name);\r\n      form.append('parentId', item.parentId ? item.parentId : \"\");\r\n      form.append('type', item.type);\r\n    });\r\n\r\n    dispatch(updateCategories(form))\r\n    .then(result => {\r\n      if (result) {\r\n        dispatch(getAllCategory());\r\n      }\r\n    })\r\n    setUpdateCategoryModal(false);\r\n  }\r\n\r\n  const renderUpdateCategoriesModal = () => {\r\n    return (\r\n      <Modal\r\n        show={updateCategoryModal}\r\n        handleClose={updateCategoriesForm}\r\n        modalTitle=\"Update Categoryies\"\r\n        size=\"lg\"\r\n      >\r\n        <Row>\r\n          <Col>\r\n            <h6>Expanded</h6>\r\n          </Col>\r\n        </Row>\r\n        {expandedArray.length > 0 &&\r\n          expandedArray.map((item, index) => (\r\n            <Row key={index}>\r\n              <Col>\r\n                <Input\r\n                  value={item.name}\r\n                  placeholder={`Category Name`}\r\n                  onChange={(e) =>\r\n                    handleCategoryInput(\r\n                      \"name\",\r\n                      e.target.value,\r\n                      index,\r\n                      \"expanded\"\r\n                    )\r\n                  }\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <select\r\n                  className=\"form-control\"\r\n                  value={item.parentId}\r\n                  onChange={(e) =>\r\n                    handleCategoryInput(\r\n                      \"parentId\",\r\n                      e.target.value,\r\n                      index,\r\n                      \"expanded\"\r\n                    )\r\n                  }\r\n                >\r\n                  <option>select category</option>\r\n                  {createCategoryList(category.categories).map((option) => (\r\n                    <option key={option.value} value={option.value}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </Col>\r\n              <Col>\r\n                <select className=\"form-control\">\r\n                  <option value=\"\">Select Type</option>\r\n                  <option value=\"store\">Store</option>\r\n                  <option value=\"product\">Product</option>\r\n                  <option value=\"page\">Page</option>\r\n                </select>\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n\r\n        <h6>Checked Categories</h6>\r\n\r\n        {checkedArray.length > 0 &&\r\n          checkedArray.map((item, index) => (\r\n            <Row key={index}>\r\n              <Col>\r\n                <Input\r\n                  value={item.name}\r\n                  placeholder={`Category Name`}\r\n                  onChange={(e) =>\r\n                    handleCategoryInput(\r\n                      \"name\",\r\n                      e.target.value,\r\n                      index,\r\n                      \"checked\"\r\n                    )\r\n                  }\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <select\r\n                  className=\"form-control\"\r\n                  value={item.parentId}\r\n                  onChange={(e) =>\r\n                    handleCategoryInput(\r\n                      \"parentId\",\r\n                      e.target.value,\r\n                      index,\r\n                      \"checked\"\r\n                    )\r\n                  }\r\n                >\r\n                  <option>select category</option>\r\n                  {createCategoryList(category.categories).map((option) => (\r\n                    <option key={option.value} value={option.value}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </Col>\r\n              <Col>\r\n                <select className=\"form-control\">\r\n                  <option value=\"\">Select Type</option>\r\n                  <option value=\"store\">Store</option>\r\n                  <option value=\"product\">Product</option>\r\n                  <option value=\"page\">Page</option>\r\n                </select>\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n\r\n        {/* <input\r\n                type=\"file\"\r\n                name=\"categoryImage\"\r\n                onChange={handleCategoryImage}\r\n              /> */}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const renderAddCategoryModal = () => {\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle=\"Add New Category\"\r\n      >\r\n        <Input\r\n          value={categoryName}\r\n          placeholder={`Category Name`}\r\n          onChange={(e) => setCategoryName(e.target.value)}\r\n        />\r\n\r\n        <select\r\n          className=\"form-control\"\r\n          value={parentCategoryId}\r\n          onChange={(e) => setParentCategoryId(e.target.value)}\r\n        >\r\n          <option>select category</option>\r\n          {createCategoryList(category.categories).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <input\r\n          type=\"file\"\r\n          name=\"categoryImage\"\r\n          onChange={handleCategoryImage}\r\n        />\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Layout sidebar>\r\n        <Container>\r\n          <Row>\r\n            <Col md={12}>\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <h3>Category</h3>\r\n                <button onClick={handleShow}>Add</button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              {/* <ul>{renderCategories(category.categories)}</ul> */}\r\n              <CheckboxTree\r\n                nodes={renderCategories(category.categories)}\r\n                checked={checked}\r\n                expanded={expanded}\r\n                onCheck={(checked) => setChecked(checked)}\r\n                onExpand={(expanded) => setExpanded(expanded)}\r\n                icons={{\r\n                  check: <IoIosCheckbox />,\r\n                  uncheck: <IoIosCheckboxOutline />,\r\n                  halfCheck: <IoIosCheckboxOutline />,\r\n                  expandClose: <IoIosArrowForward />,\r\n                  expandOpen: <IoIosArrowDown />,\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <button>Delete</button>\r\n              <button onClick={updateCategory}>Edit</button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        {renderAddCategoryModal()}\r\n        {renderUpdateCategoriesModal()}\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Category;\r\n","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\UI\\Input\\index.jsx",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Orders\\index.jsx",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\category.action.js",["93"],"import axios from \"../helpers/axios\";\r\nimport { categoryConstants } from \"./constants\";\r\n\r\nexport const getAllCategory = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: categoryConstants.GET_ALL_CATEGORIES_REQUEST });\r\n    const res = await axios.get(\"category/getcategory\");\r\n    console.log(res);\r\n\r\n    if (res.status === 200) {\r\n      const { categoryList } = res.data;\r\n\r\n      dispatch({\r\n        type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\r\n        payload: { categories: categoryList },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\r\n        payload: { error: res.data.error },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const addCategory = (form) => {\r\n    return async dispatch => {\r\n        dispatch({ type: categoryConstants.ADD_NEW_CATEGORY_REQUEST });\r\n        const res = await axios.post('/category/create', form);\r\n        if (res.status === 201) {\r\n            dispatch({\r\n                type: categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\r\n                payload: { category: res.data.category }\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: categoryConstants.ADD_NEW_CATEGORY_FAILURE,\r\n                payload: res.data.error\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateCategories = (form) => {\r\n    return async dispatch => {\r\n        const res = await axios.post('/category/update', form);\r\n        if (res.status === 201) {\r\n          return true;\r\n          console.log(res);\r\n        } else {\r\n          console.log(res);\r\n        }\r\n    }\r\n}","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\auth.reducers.js",["94","95"],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\category.reducer.js",["96","97","98","99"],{"ruleId":"100","severity":1,"message":"101","line":25,"column":6,"nodeType":"102","endLine":25,"endColumn":8,"suggestions":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":14,"column":10,"nodeType":"110","messageId":"111","endLine":14,"endColumn":15},{"ruleId":"108","severity":1,"message":"112","line":14,"column":17,"nodeType":"110","messageId":"111","endLine":14,"endColumn":25},{"ruleId":"104","replacedBy":"113"},{"ruleId":"106","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":9,"column":1,"nodeType":"117","endLine":39,"endColumn":3},{"ruleId":"108","severity":1,"message":"118","line":2,"column":23,"nodeType":"110","messageId":"111","endLine":2,"endColumn":34},{"ruleId":"108","severity":1,"message":"119","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"120","severity":1,"message":"121","line":85,"column":43,"nodeType":"122","messageId":"123","endLine":85,"endColumn":45},{"ruleId":"120","severity":1,"message":"121","line":93,"column":43,"nodeType":"122","messageId":"123","endLine":93,"endColumn":45},{"ruleId":"120","severity":1,"message":"121","line":104,"column":14,"nodeType":"122","messageId":"123","endLine":104,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":106,"column":15,"nodeType":"122","messageId":"123","endLine":106,"endColumn":17},{"ruleId":"120","severity":1,"message":"121","line":109,"column":21,"nodeType":"122","messageId":"123","endLine":109,"endColumn":23},{"ruleId":"120","severity":1,"message":"121","line":111,"column":15,"nodeType":"122","messageId":"123","endLine":111,"endColumn":17},{"ruleId":"124","severity":1,"message":"125","line":49,"column":11,"nodeType":"126","messageId":"127","endLine":49,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":18,"column":1,"nodeType":"117","endLine":59,"endColumn":2},{"ruleId":"128","severity":1,"message":"129","line":22,"column":5,"nodeType":"130","messageId":"131","endLine":56,"endColumn":6},{"ruleId":"120","severity":1,"message":"121","line":12,"column":18,"nodeType":"122","messageId":"123","endLine":12,"endColumn":20},{"ruleId":"120","severity":1,"message":"121","line":26,"column":21,"nodeType":"122","messageId":"123","endLine":26,"endColumn":23},{"ruleId":"115","severity":1,"message":"116","line":49,"column":1,"nodeType":"117","endLine":83,"endColumn":2},{"ruleId":"128","severity":1,"message":"129","line":52,"column":5,"nodeType":"130","messageId":"131","endLine":81,"endColumn":6},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth.authenticate' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["132"],"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.",["133"],["134"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'NavDropdown' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",{"desc":"135","fix":"136"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [auth.authenticate, dispatch]",{"range":"137","text":"138"},[811,813],"[auth.authenticate, dispatch]"]