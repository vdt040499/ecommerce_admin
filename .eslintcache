[{"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\App.js":"1","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Category\\index.jsx":"2","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\category.action.js":"3","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\urlConfig.js":"4","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\order.reducer.js":"5","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\UI\\Modal\\index.jsx":"6","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\Header\\index.jsx":"7","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Category\\components\\UpdateCategoriesModal\\index.jsx":"8","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Category\\components\\AddCategoryModal\\index.jsx":"9","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\category.reducer.js":"10","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\Layout\\index.jsx":"11","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\NewPage\\index.jsx":"12","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\helpers\\linearCategories.js":"13","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\index.js":"14","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\store\\index.js":"15","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\initialData.action.js":"16","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\HOC\\PrivateRoute.js":"17","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\index.js":"18","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\constants.js":"19","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\helpers\\axios.js":"20","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Home\\index.jsx":"21","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Orders\\index.jsx":"22","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Products\\index.jsx":"23","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Signin\\index.jsx":"24","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Signup\\index.jsx":"25","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\user.actions.js":"26","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\product.reducer.js":"27","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\page.action.js":"28"},{"size":1332,"mtime":1608552171240,"results":"29","hashOfConfig":"30"},{"size":10013,"mtime":1608545970969,"results":"31","hashOfConfig":"30"},{"size":2469,"mtime":1608544818867,"results":"32","hashOfConfig":"30"},{"size":157,"mtime":1607912007390,"results":"33","hashOfConfig":"30"},{"size":0,"mtime":1606484082252,"results":"34","hashOfConfig":"30"},{"size":970,"mtime":1608540536610,"results":"35","hashOfConfig":"30"},{"size":2264,"mtime":1607345619268,"results":"36","hashOfConfig":"30"},{"size":4073,"mtime":1608546392144,"results":"37","hashOfConfig":"30"},{"size":1512,"mtime":1608540010872,"results":"38","hashOfConfig":"30"},{"size":3551,"mtime":1608551113660,"results":"39","hashOfConfig":"30"},{"size":1029,"mtime":1608551911013,"results":"40","hashOfConfig":"30"},{"size":4603,"mtime":1608564327683,"results":"41","hashOfConfig":"30"},{"size":408,"mtime":1608554284042,"results":"42","hashOfConfig":"30"},{"size":732,"mtime":1606466423488,"results":"43","hashOfConfig":"30"},{"size":316,"mtime":1608542026548,"results":"44","hashOfConfig":"30"},{"size":708,"mtime":1607859542299,"results":"45","hashOfConfig":"30"},{"size":441,"mtime":1606452091311,"results":"46","hashOfConfig":"30"},{"size":206,"mtime":1608562688822,"results":"47","hashOfConfig":"30"},{"size":1824,"mtime":1608562430879,"results":"48","hashOfConfig":"30"},{"size":1033,"mtime":1608563528789,"results":"49","hashOfConfig":"30"},{"size":780,"mtime":1606481668042,"results":"50","hashOfConfig":"30"},{"size":217,"mtime":1606480950957,"results":"51","hashOfConfig":"30"},{"size":6853,"mtime":1607912317190,"results":"52","hashOfConfig":"30"},{"size":1704,"mtime":1606466127783,"results":"53","hashOfConfig":"30"},{"size":2645,"mtime":1606477165244,"results":"54","hashOfConfig":"30"},{"size":707,"mtime":1606477957639,"results":"55","hashOfConfig":"30"},{"size":370,"mtime":1607862429453,"results":"56","hashOfConfig":"30"},{"size":780,"mtime":1608562391391,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},"b2ahz9",{"filePath":"61","messages":"62","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\App.js",["120","121"],"import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { isUserLoggedIn } from \"./actions\";\nimport { getInitialData } from \"./actions/initialData.action\";\nimport \"./App.css\";\nimport PrivateRoute from \"./components/HOC/PrivateRoute\";\nimport Category from \"./containers/Category\";\nimport Home from \"./containers/Home\";\nimport Orders from \"./containers/Orders\";\nimport Products from \"./containers/Products\";\nimport Signin from \"./containers/Signin\";\nimport Signup from \"./containers/Signup\";\n\nfunction App() {\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLoggedIn());\n    }\n\n    dispatch(getInitialData());\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <PrivateRoute path=\"/\" exact component={Home} /> \n        <PrivateRoute path=\"/page\" component={NewPage} /> \n        <PrivateRoute path=\"/category\" component={Category} /> \n        <PrivateRoute path=\"/products\" component={Products} />\n        <PrivateRoute path=\"/orders\" component={Orders} />\n\n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/signup\" component={Signup} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Category\\index.jsx",["122","123","124","125","126","127","128","129","130"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addCategory,\r\n  getAllCategory,\r\n  updateCategories,\r\n  deleteCategories as deleteCategoriesAction,\r\n} from \"../../actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport {\r\n  IoIosCheckboxOutline,\r\n  IoIosCheckbox,\r\n  IoIosArrowForward,\r\n  IoIosArrowDown,\r\n  IoIosCloudUpload,\r\n  IoIosTrash,\r\n  IoIosAdd,\r\n} from \"react-icons/io\";\r\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\r\nimport UpdateCategoriesModal from \"./components/UpdateCategoriesModal\";\r\nimport AddCategoryModal from \"./components/AddCategoryModal\";\r\nimport \"./style.css\";\r\n\r\nfunction Category() {\r\n  const dispatch = useDispatch();\r\n  const category = useSelector((state) => state.category);\r\n  const [show, setShow] = useState(false);\r\n  const [checked, setChecked] = useState([]);\r\n  const [expanded, setExpanded] = useState([]);\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [parentCategoryId, setParentCategoryId] = useState(\"\");\r\n  const [categoryImage, setCategoryImage] = useState(\"\");\r\n  const [checkedArray, setCheckedArray] = useState([]);\r\n  const [expandedArray, setExpandedArray] = useState([]);\r\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    const form = new FormData();\r\n\r\n    // if (categoryName === \"\") {\r\n    //   alert(\"Name is required\");\r\n    //   return;\r\n    // }\r\n\r\n    form.append(\"name\", categoryName);\r\n    form.append(\"parentId\", parentCategoryId);\r\n    form.append(\"categoryImage\", categoryImage);\r\n    console.log(form);\r\n    dispatch(addCategory(form));\r\n    setCategoryName(\"\");\r\n    setParentCategoryId(\"\");\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n\r\n  const renderCategories = (categories) => {\r\n    let myCategories = [];\r\n    for (let category of categories) {\r\n      myCategories.push({\r\n        label: category.name,\r\n        value: category._id,\r\n        children:\r\n          category.children.length > 0 && renderCategories(category.children),\r\n      });\r\n    }\r\n    return myCategories;\r\n  };\r\n\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({\r\n        value: category._id,\r\n        name: category.name,\r\n        parentId: category.parentId,\r\n        type: category.type\r\n      });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n\r\n    return options;\r\n  };\r\n\r\n  const handleCategoryImage = (e) => {\r\n    setCategoryImage(e.target.files[0]);\r\n  };\r\n\r\n  const updateCategory = () => {\r\n    updateCheckedAndExpandedCategories();\r\n    setUpdateCategoryModal(true);\r\n  };\r\n\r\n  const updateCheckedAndExpandedCategories = () => {\r\n    const categories = createCategoryList(category.categories);\r\n    const checkedArray = [];\r\n    const expandedArray = [];\r\n    checked.length > 0 &&\r\n      checked.forEach((categoryId, index) => {\r\n        const category = categories.find(\r\n          (category, index) => categoryId == category.value\r\n        );\r\n        category && checkedArray.push(category);\r\n      });\r\n\r\n    expanded.length > 0 &&\r\n      expanded.forEach((categoryId, index) => {\r\n        const category = categories.find(\r\n          (category, index) => categoryId == category.value\r\n        );\r\n        category && expandedArray.push(category);\r\n      });\r\n\r\n    setCheckedArray(checkedArray);\r\n    setExpandedArray(expandedArray);\r\n  };\r\n\r\n  const handleCategoryInput = (key, value, index, type) => {\r\n    if (type == \"checked\") {\r\n      const updatedCheckedArray = checkedArray.map((item, _index) =>\r\n        index == _index ? { ...item, [key]: value } : item\r\n      );\r\n      setCheckedArray(updatedCheckedArray);\r\n    } else if (type == \"expanded\") {\r\n      const updatedExpandedArray = expandedArray.map((item, _index) =>\r\n        index == _index ? { ...item, [key]: value } : item\r\n      );\r\n      setExpandedArray(updatedExpandedArray);\r\n    }\r\n  };\r\n\r\n  const updateCategoriesForm = () => {\r\n    const form = new FormData();\r\n\r\n    expandedArray.forEach((item, index) => {\r\n      form.append(\"_id\", item.value);\r\n      form.append(\"name\", item.name);\r\n      form.append(\"parentId\", item.parentId ? item.parentId : \"\");\r\n      form.append(\"type\", item.type);\r\n    });\r\n\r\n    checkedArray.forEach((item, index) => {\r\n      form.append(\"_id\", item.value);\r\n      form.append(\"name\", item.name);\r\n      form.append(\"parentId\", item.parentId ? item.parentId : \"\");\r\n      form.append(\"type\", item.type);\r\n    });\r\n\r\n    dispatch(updateCategories(form));\r\n    setUpdateCategoryModal(false);\r\n  };\r\n\r\n  const renderAddCategoryModal = () => {\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle=\"Add New Category\"\r\n      >\r\n        <Input\r\n          value={categoryName}\r\n          placeholder={`Category Name`}\r\n          onChange={(e) => setCategoryName(e.target.value)}\r\n        />\r\n\r\n        <select\r\n          className=\"form-control\"\r\n          value={parentCategoryId}\r\n          onChange={(e) => setParentCategoryId(e.target.value)}\r\n        >\r\n          <option>select category</option>\r\n          {createCategoryList(category.categories).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <input\r\n          type=\"file\"\r\n          name=\"categoryImage\"\r\n          onChange={handleCategoryImage}\r\n        />\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const deleteCategory = () => {\r\n    updateCheckedAndExpandedCategories();\r\n    setDeleteCategoryModal(true);\r\n  };\r\n\r\n  const deleteCategories = () => {\r\n    const checkedIdsArray = checkedArray.map((item, index) => ({\r\n      _id: item.value,\r\n    }));\r\n    const expandedIdsArray = expandedArray.map((item, index) => ({\r\n      _id: item.value,\r\n    }));\r\n    const idsArray = expandedIdsArray.concat(checkedIdsArray);\r\n\r\n    if (checkedIdsArray.length > 0) {\r\n      dispatch(deleteCategoriesAction(checkedIdsArray)).then((result) => {\r\n        if (result) {\r\n          dispatch(getAllCategory());\r\n          setDeleteCategoryModal(false);\r\n        }\r\n      });\r\n    }\r\n\r\n    setDeleteCategoryModal(false);\r\n  };\r\n\r\n  const renderDeleteCategoryModal = () => {\r\n    return (\r\n      <Modal\r\n        modalTitle=\"Confirm\"\r\n        show={deleteCategoryModal}\r\n        handleClose={() => setDeleteCategoryModal(false)}\r\n        buttons={[\r\n          {\r\n            label: \"No\",\r\n            color: \"primary\",\r\n            onClick: () => {\r\n              alert(\"no\");\r\n            },\r\n          },\r\n          {\r\n            label: \"Yes\",\r\n            color: \"danger\",\r\n            onClick: deleteCategories,\r\n          },\r\n        ]}\r\n      >\r\n        <h5>Expanded</h5>\r\n        {expandedArray.map((item, index) => (\r\n          <span key={index}>{item.name}</span>\r\n        ))}\r\n        <h5>Checked</h5>\r\n        {checkedArray.map((item, index) => (\r\n          <span key={index}>{item.name}</span>\r\n        ))}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const categoryList = createCategoryList(category.categories);\r\n\r\n  return (\r\n    <div>\r\n      <Layout sidebar>\r\n        <Container>\r\n          <Row>\r\n            <Col md={12}>\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <h3>Category</h3>\r\n                <div className=\"actionBtnContainer\">\r\n                  <span>Actions: </span>\r\n                  <button onClick={handleShow}>\r\n                    <IoIosAdd />\r\n                    Add\r\n                  </button>\r\n                  <button onClick={deleteCategory}>\r\n                    <IoIosTrash />\r\n                    Delete\r\n                  </button>\r\n                  <button onClick={updateCategory}>\r\n                    <IoIosCloudUpload />\r\n                    Edit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              <CheckboxTree\r\n                nodes={renderCategories(category.categories)}\r\n                checked={checked}\r\n                expanded={expanded}\r\n                onCheck={(checked) => setChecked(checked)}\r\n                onExpand={(expanded) => setExpanded(expanded)}\r\n                icons={{\r\n                  check: <IoIosCheckbox />,\r\n                  uncheck: <IoIosCheckboxOutline />,\r\n                  halfCheck: <IoIosCheckboxOutline />,\r\n                  expandClose: <IoIosArrowForward />,\r\n                  expandOpen: <IoIosArrowDown />,\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <AddCategoryModal\r\n          show={show}\r\n          handleClose={handleClose}\r\n          modalTitle={\"Add New Category\"}\r\n          categoryName={categoryName}\r\n          setCategoryName={setCategoryName}\r\n          parentCategoryId={parentCategoryId}\r\n          setParentCategoryId={setParentCategoryId}\r\n          categoryList={categoryList}\r\n          handleCategoryImage={handleCategoryImage}\r\n        />\r\n        <UpdateCategoriesModal\r\n          show={updateCategoryModal}\r\n          handleClose={updateCategoriesForm}\r\n          modalTitle={\"Update Categoryies\"}\r\n          size=\"lg\"\r\n          expandedArray={expandedArray}\r\n          checkedArray={checkedArray}\r\n          handleCategoryInput={handleCategoryInput}\r\n          categoryList={categoryList}\r\n        />\r\n        {/* {renderAddCategoryModal()} */}\r\n        {renderDeleteCategoryModal()}\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Category;\r\n",["131","132"],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\category.action.js",["133"],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\urlConfig.js",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\order.reducer.js",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\UI\\Modal\\index.jsx",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\Header\\index.jsx",["134"],"import React from \"react\";\r\nimport { Nav, Navbar, NavDropdown, Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { signout } from \"../../actions\";\r\n\r\nfunction Header() {\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const logout = () => {\r\n    dispatch(signout());\r\n  }\r\n\r\n  const renderLoggedInLinks = () => {\r\n    return (\r\n      <Nav>\r\n        <li className=\"nav-item\">\r\n          <span to=\"/signout\" className=\"nav-link\" onClick={logout}>\r\n            Signout\r\n          </span>\r\n        </li>\r\n      </Nav>\r\n    );\r\n  };\r\n\r\n  const renderNonLoggedInLinks = () => {\r\n    return (\r\n      <Nav>\r\n        <li className=\"nav-item\">\r\n          <NavLink to=\"/signin\" className=\"nav-link\">\r\n            Signin\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink to=\"/signup\" className=\"nav-link\">\r\n            Signup\r\n          </NavLink>\r\n        </li>\r\n      </Nav>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Navbar\r\n      collapseOnSelect\r\n      fixed=\"top\"\r\n      expand=\"lg\"\r\n      bg=\"dark\"\r\n      variant=\"dark\"\r\n      style={{ zIndex: 1 }}\r\n    >\r\n      <Container fluid>\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          Admin Dashboard\r\n        </Link>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">\r\n                Another action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">\r\n                Separated link\r\n              </NavDropdown.Item>\r\n            </NavDropdown> */}\r\n          </Nav>\r\n          \r\n            {auth.authenticate ? renderLoggedInLinks() : renderNonLoggedInLinks()}\r\n\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Category\\components\\UpdateCategoriesModal\\index.jsx",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Category\\components\\AddCategoryModal\\index.jsx",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\category.reducer.js",["135","136","137","138"],"import { categoryConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    categories: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst buildNewCategories = (parentId, categories, category) => {\r\n    let myCategories = [];\r\n\r\n    if (parentId == undefined) {\r\n        return [\r\n            ...categories,\r\n            {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                type: category.type,\r\n                children: []\r\n            }\r\n        ];\r\n    }\r\n\r\n    for (let cat of categories) {\r\n\r\n        if (cat._id == parentId) {\r\n            const newCategory = {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                parentId: category.parentId,\r\n                type: category.type,\r\n                children: []\r\n            };\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children.length > 0 ? [...cat.children, newCategory] : [newCategory]\r\n            });\r\n        } else {\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\r\n            });\r\n        }\r\n    }\r\n\r\n    return myCategories;\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n    console.log(action);\r\n\r\n    switch (action.type) {\r\n        case categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                categories: action.payload.categories\r\n            }\r\n            break;\r\n        case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\r\n            const category = action.payload.category;\r\n            const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\r\n            console.log(updatedCategories);\r\n\r\n            state = {\r\n                ...state,\r\n                categories: updatedCategories,\r\n                loading: false\r\n            }\r\n            break;\r\n        case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\r\n            state = {\r\n                ...initState\r\n            }\r\n            break;\r\n        case categoryConstants.UPDATE_CATEGORIES_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case categoryConstants.UPDATE_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            break;\r\n        case categoryConstants.UPDATE_CATEGORIES_FAILURE:\r\n            state = {\r\n                ...state,\r\n                error: action.payload.error,\r\n                loading: false\r\n            }\r\n            break;\r\n        case categoryConstants.DELETE_CATEGORIES_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case categoryConstants.DELETE_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            break;\r\n        case categoryConstants.DELETE_CATEGORIES_FAILURE:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\Layout\\index.jsx",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\NewPage\\index.jsx",["139"],"import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport linearCategories from \"../../helpers/linearCategories\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createPage } from \"../../actions\";\r\n\r\nconst NewPage = (props) => {\r\n  const [createModal, setCreateModal] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const category = useSelector((state) => state.category);\r\n  const [categories, setCategories] = useState([]);\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [banners, setBanners] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setCategories(linearCategories(category.categories));\r\n  }, [category]);\r\n\r\n  const onCategoryChange = (e) => {\r\n    console.log(e.target.value);\r\n    const category = categories.find(\r\n      (category) => category._id == e.target.value\r\n    );\r\n    setCategoryId(e.target.value);\r\n    setType(category.type);\r\n  };\r\n\r\n  const handleBannerImages = (e) => {\r\n    console.log(e);\r\n    setBanners([...banners, e.target.files[0]]);\r\n  };\r\n\r\n  const handleProductImages = (e) => {\r\n    console.log(e);\r\n    setProducts([...products, e.target.files[0]]);\r\n  };\r\n\r\n  const submitPageForm = (e) => {\r\n    // e.target.preventDefault();\r\n\r\n    if (title === \"\") {\r\n      alert(\"Title is required\");\r\n      setCreateModal(false);\r\n      return;\r\n    }\r\n\r\n    const form = new FormData();\r\n    form.append(\"title\", title);\r\n    form.append(\"description\", desc);\r\n    form.append(\"category\", categoryId);\r\n    form.append(\"type\", type);\r\n    banners.forEach((banner, index) => {\r\n      form.append(\"banners\", banner);\r\n    });\r\n    products.forEach((product, index) => {\r\n      form.append(\"products\", product);\r\n    });\r\n\r\n    dispatch(createPage(form));\r\n  };\r\n\r\n  const renderCreatePageModal = () => {\r\n    return (\r\n      <Modal\r\n        show={createModal}\r\n        modalTitle={\"Create New Page\"}\r\n        handleClose={submitPageForm}\r\n      >\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <select\r\n                className=\"form-control\"\r\n                value={categoryId}\r\n                onChange={onCategoryChange}\r\n              >\r\n                <option value=\"\">select category</option>\r\n                {categories.map((cat) => (\r\n                  <option key={cat._id} value={cat._id}>\r\n                    {cat.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <Input\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                placeholder={\"Page Title\"}\r\n                className=\"\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <Input\r\n                value={desc}\r\n                onChange={(e) => setDesc(e.target.value)}\r\n                placeholder={\"Page Desc\"}\r\n                className=\"\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          {banners.length > 0\r\n            ? banners.map((banner, index) => (\r\n                <Row key={index}>\r\n                  <Col>{banner.name}</Col>\r\n                </Row>\r\n              ))\r\n            : null}\r\n          <Row>\r\n            <Col>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"file\"\r\n                name=\"banner\"\r\n                onChange={handleBannerImages}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          {products.length > 0\r\n            ? products.map((product, index) => (\r\n                <Row key={index}>\r\n                  <Col>{product.name}</Col>\r\n                </Row>\r\n              ))\r\n            : null}\r\n          <Row>\r\n            <Col>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"file\"\r\n                name=\"products\"\r\n                onChange={handleProductImages}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      {renderCreatePageModal()}\r\n      <button onClick={() => setCreateModal(true)}>Create Page</button>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NewPage;\r\n","C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\helpers\\linearCategories.js",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\index.js",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\store\\index.js",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\initialData.action.js",["140"],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\HOC\\PrivateRoute.js",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\index.js",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\constants.js",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\helpers\\axios.js",["141"],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Home\\index.jsx",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Orders\\index.jsx",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Products\\index.jsx",["142"],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Signin\\index.jsx",["143","144"],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Signup\\index.jsx",["145","146"],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\user.actions.js",[],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\product.reducer.js",["147","148"],"C:\\Users\\Admin\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\page.action.js",[],{"ruleId":"149","severity":1,"message":"150","line":25,"column":6,"nodeType":"151","endLine":25,"endColumn":8,"suggestions":"152"},{"ruleId":"153","severity":2,"message":"154","line":31,"column":47,"nodeType":"155","messageId":"156","endLine":31,"endColumn":54},{"ruleId":"157","severity":1,"message":"158","line":1,"column":17,"nodeType":"155","messageId":"159","endLine":1,"endColumn":26},{"ruleId":"160","severity":1,"message":"161","line":106,"column":43,"nodeType":"162","messageId":"163","endLine":106,"endColumn":45},{"ruleId":"160","severity":1,"message":"161","line":114,"column":43,"nodeType":"162","messageId":"163","endLine":114,"endColumn":45},{"ruleId":"160","severity":1,"message":"161","line":124,"column":14,"nodeType":"162","messageId":"163","endLine":124,"endColumn":16},{"ruleId":"160","severity":1,"message":"161","line":126,"column":15,"nodeType":"162","messageId":"163","endLine":126,"endColumn":17},{"ruleId":"160","severity":1,"message":"161","line":129,"column":21,"nodeType":"162","messageId":"163","endLine":129,"endColumn":23},{"ruleId":"160","severity":1,"message":"161","line":131,"column":15,"nodeType":"162","messageId":"163","endLine":131,"endColumn":17},{"ruleId":"157","severity":1,"message":"164","line":158,"column":9,"nodeType":"155","messageId":"159","endLine":158,"endColumn":31},{"ruleId":"157","severity":1,"message":"165","line":205,"column":11,"nodeType":"155","messageId":"159","endLine":205,"endColumn":19},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"160","severity":1,"message":"161","line":76,"column":20,"nodeType":"162","messageId":"163","endLine":76,"endColumn":22},{"ruleId":"157","severity":1,"message":"170","line":2,"column":23,"nodeType":"155","messageId":"159","endLine":2,"endColumn":34},{"ruleId":"160","severity":1,"message":"161","line":12,"column":18,"nodeType":"162","messageId":"163","endLine":12,"endColumn":20},{"ruleId":"160","severity":1,"message":"161","line":27,"column":21,"nodeType":"162","messageId":"163","endLine":27,"endColumn":23},{"ruleId":"171","severity":1,"message":"172","line":51,"column":1,"nodeType":"173","endLine":123,"endColumn":2},{"ruleId":"174","severity":1,"message":"175","line":54,"column":5,"nodeType":"176","messageId":"177","endLine":121,"endColumn":6},{"ruleId":"160","severity":1,"message":"161","line":29,"column":34,"nodeType":"162","messageId":"163","endLine":29,"endColumn":36},{"ruleId":"157","severity":1,"message":"178","line":2,"column":29,"nodeType":"155","messageId":"159","endLine":2,"endColumn":49},{"ruleId":"157","severity":1,"message":"179","line":4,"column":8,"nodeType":"155","messageId":"159","endLine":4,"endColumn":20},{"ruleId":"180","severity":1,"message":"181","line":202,"column":19,"nodeType":"182","endLine":202,"endColumn":63},{"ruleId":"157","severity":1,"message":"183","line":12,"column":10,"nodeType":"155","messageId":"159","endLine":12,"endColumn":15},{"ruleId":"157","severity":1,"message":"184","line":12,"column":17,"nodeType":"155","messageId":"159","endLine":12,"endColumn":25},{"ruleId":"157","severity":1,"message":"183","line":14,"column":10,"nodeType":"155","messageId":"159","endLine":14,"endColumn":15},{"ruleId":"157","severity":1,"message":"184","line":14,"column":17,"nodeType":"155","messageId":"159","endLine":14,"endColumn":25},{"ruleId":"171","severity":1,"message":"172","line":7,"column":1,"nodeType":"173","endLine":18,"endColumn":3},{"ruleId":"174","severity":1,"message":"175","line":8,"column":3,"nodeType":"176","messageId":"177","endLine":15,"endColumn":4},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth.authenticate' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["185"],"no-undef","'NewPage' is not defined.","Identifier","undef","no-unused-vars","'useEffect' is defined but never used.","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'renderAddCategoryModal' is assigned a value but never used.","'idsArray' is assigned a value but never used.","no-native-reassign",["186"],"no-negated-in-lhs",["187"],"'NavDropdown' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'initialDataConstants' is defined but never used.","'authReducers' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'error' is assigned a value but never used.","'setError' is assigned a value but never used.",{"desc":"188","fix":"189"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [auth.authenticate, dispatch]",{"range":"190","text":"191"},[811,813],"[auth.authenticate, dispatch]"]